{"version":3,"sources":["components/Wrapper/index.js","components/FriendsCard/index.js","components/Header.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","FriendsCard","alt","id","src","image","onClick","checkIfClicked","Header","currentScore","topScore","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","friends","bind","assertThisInitialized","clickedFriends","filter","friendsCopy","slice","sort","b","Math","random","clicked","resetFriendsCopy","map","setState","findIndex","_this2","components_Header","components_Wrapper","components_FriendsCard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"6nDAOeA,MAJf,SAAiBC,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMK,WCY1BC,SAZK,SAAAN,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OACEI,IAAK,iBAAmBP,EAAMQ,GAC9BC,IAAKT,EAAMU,MACXC,QAAS,kBAAMX,EAAMY,eAAeZ,EAAMQ,kBCUnCK,SAfA,SAAAb,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iEAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,kBACkBJ,EAAMc,aADxB,IACsCb,EAAAC,EAAAC,cAAA,WADtC,IAC6CF,EAAAC,EAAAC,cAAA,WAD7C,cAEcH,EAAMe,cCqEXC,cA3Eb,SAAAA,EAAYhB,GAAO,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpB,KACDwB,MAAQ,CACXC,QAASA,EACTV,SAAU,EACVD,aAAc,GAEhBG,EAAKL,eAAiBK,EAAKL,eAAec,KAApBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAPLA,8EAUJT,GAEb,IAAIoB,EAAiBR,KAAKI,MAAMC,QAAQI,OACtC,SAAAJ,GAAO,OAAIA,EAAQjB,KAAOA,IAC1B,GACEsB,EAAcV,KAAKI,MAAMC,QAAQM,QAAQC,KAAK,SAAS9B,EAAG+B,GAC5D,MAAO,GAAMC,KAAKC,WAGpB,GAAKP,EAAeQ,QAkBf,CACH,IAAIC,EAAmBP,EAAYQ,IAAI,SAAAb,GACrC,MAAO,CACLjB,GAAIiB,EAAQjB,GACZE,MAAOe,EAAQf,MACf0B,SAAS,KAGbhB,KAAKmB,SAAS,CACZd,QAASY,EACTvB,aAAc,SA3BhBc,EAAeQ,SAAU,EACzBN,EACEA,EAAYU,UAAU,SAAAf,GAAO,OAAIA,EAAQjB,KAAOA,KAC9CoB,EAGJR,KAAKmB,SAAS,CACZd,QAASK,EACThB,aAAcM,KAAKI,MAAMV,aAAe,EACxCC,SACEK,KAAKI,MAAMV,aAAe,EAAIM,KAAKI,MAAMT,SACrCK,KAAKI,MAAMV,aAAe,EAC1BM,KAAKI,MAAMT,4CAsBd,IAAA0B,EAAArB,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACuC,EAAD,CACE5B,aAAcM,KAAKI,MAAMV,aACzBC,SAAUK,KAAKI,MAAMT,WAEvBd,EAAAC,EAAAC,cAACwC,EAAD,KACGvB,KAAKI,MAAMC,QAAQa,IAAI,SAAAb,GAAO,OAC7BxB,EAAAC,EAAAC,cAACyC,EAAD,CACEhC,eAAgB6B,EAAK7B,eACrBJ,GAAIiB,EAAQjB,GACZE,MAAOe,EAAQf,mBAnEXmC,mBCFlBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7c61285c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// set properties for the image and the onClick event to see if the card has been clicked or not already\r\nconst FriendsCard = props => (\r\n  <div className=\"card\">\r\n    <div className=\"img-container\">\r\n      <img\r\n        alt={\"This is image \" + props.id}\r\n        src={props.image}\r\n        onClick={() => props.checkIfClicked(props.id)}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default FriendsCard;\r\n","import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\n// create a header with a Bootstrap navbar and jumbotron\r\n\r\nconst Header = props => (\r\n  <div className=\"jumbotron\">\r\n    <h1>Click Em </h1>\r\n    <p className=\"lead\">\r\n      Click on a picture, but dont click on the same picture twice!\r\n    </p>\r\n    <nav className=\"navbar sticky-top navbar-light bg-light justify-content-end\">\r\n      <h5 className=\"text-muted\">\r\n        Current Score: {props.currentScore} <br /> <br />\r\n        Top Score: {props.topScore}\r\n      </h5>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport FriendsCard from \"./components/FriendsCard\";\r\nimport friends from \"./friends.json\";\r\nimport Header from \"./components/Header\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      friends: friends,\r\n      topScore: 0,\r\n      currentScore: 0\r\n    };\r\n    this.checkIfClicked = this.checkIfClicked.bind(this);\r\n  }\r\n\r\n  checkIfClicked(id) {\r\n    // create a copy of the cards and use a random method to sort the array\r\n    let clickedFriends = this.state.friends.filter(\r\n      friends => friends.id === id\r\n    )[0];\r\n    let friendsCopy = this.state.friends.slice().sort(function(a, b) {\r\n      return 0.5 - Math.random();\r\n    });\r\n    // if a card has not been clicked, set its clicked state to true\r\n    if (!clickedFriends.clicked) {\r\n      clickedFriends.clicked = true;\r\n      friendsCopy[\r\n        friendsCopy.findIndex(friends => friends.id === id)\r\n      ] = clickedFriends;\r\n\r\n      // set the state and increment the counter\r\n      this.setState({\r\n        friends: friendsCopy,\r\n        currentScore: this.state.currentScore + 1,\r\n        topScore:\r\n          this.state.currentScore + 1 > this.state.topScore\r\n            ? this.state.currentScore + 1\r\n            : this.state.topScore\r\n      });\r\n    }\r\n\r\n    // if a card has been clicked already, then set its click to false and reset the game\r\n    else {\r\n      let resetFriendsCopy = friendsCopy.map(friends => {\r\n        return {\r\n          id: friends.id,\r\n          image: friends.image,\r\n          clicked: false\r\n        };\r\n      });\r\n      this.setState({\r\n        friends: resetFriendsCopy,\r\n        currentScore: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  // render the header, score, wrapper, and footer on the page using the current state values\r\n  // render the header, score, wrapper, and footer on the page using the current state values\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header\r\n          currentScore={this.state.currentScore}\r\n          topScore={this.state.topScore}\r\n        />\r\n        <Wrapper>\r\n          {this.state.friends.map(friends => (\r\n            <FriendsCard\r\n              checkIfClicked={this.checkIfClicked}\r\n              id={friends.id}\r\n              image={friends.image}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}